name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:

env:
  project-name: 2PPy

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        python-version: ['3.9', '3.10', '3.11']
        java-version: ['11', '18']
      fail-fast: false
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Set up Maven with Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          architecture: 'x64'
          cache: maven
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build
        env:
          JAVA_VERSION: ${{ matrix.java-version }}
        run: |
          python -m build --sdist --wheel
      - name: Install
        run: |
          pip install dist/*.whl
      - name: Test
        run: |
          python -m pytest
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.project-name }}-${{ matrix.python-version }}-${{ matrix.os }}-java${{ matrix.java-version }}
          path: |
            dist/*.whl
            dist/*.tar.gz

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with Flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  delivery:
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.project-name }}-3.11-ubuntu-java18
      - name: List files
        run: |
          ls -lah
